// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"repo_owner","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[],"name":"greet","outputs":[{"name":"","type":"string"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"funders","outputs":[{"name":"addr","type":"address"},{"name":"amount","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"recepient","type":"address"}],"name":"sendTo","outputs":[],"type":"function"},{"constant":false,"inputs":[],"name":"cancel","outputs":[],"type":"function"},{"inputs":[{"name":"_repo_owner","type":"address"}],"type":"constructor"}],
    binary: "606060405260405160208061037183395060806040525160008054600160a060020a031916821790555061033a806100376000396000f36060604052361561004b5760e060020a60003504633e3fb1a481146100c4578063cfae3217146100d6578063dc0d3dff14610163578063e6d25245146101d7578063ea8a1af0146101ff575b6102b660a06040523360609081523460808190526001805480820180835592939282908280158290116102b8576002028160020283600052602060002091820191016102b891905b8082111561030c57805473ffffffffffffffffffffffffffffffffffffffff19168155600081860155600201610093565b610310600054600160a060020a031681565b600060605260c0604052600560809081527f776f726b7300000000000000000000000000000000000000000000000000000060a052602060c0908152600560e081905281906101009060a09080838184600060046012f1505081517affffffffffffffffffffffffffffffffffffffffffffffffffffff1916909152505060405161012081900392509050f35b61031a60043560018054829081101561000257506000526002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79190910154600160a060020a03919091169082565b6102b6600435600054600160a060020a03338116911614156103275780600160a060020a0316ff5b6102b660008054600160a060020a0333811691161415610327575b60015481101561032c576001805482908110156100025760009182526002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600180549254600160a060020a0316928490811015610002576002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7015460405190915082818181858883f1505050505060010161021a565b005b505050815481101561000257906000526020600020906002020160005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505590505050565b5090565b6060908152602090f35b6060918252608052604090f35b610002565b600054600160a060020a0316ff",
    unlinked_binary: "606060405260405160208061037183395060806040525160008054600160a060020a031916821790555061033a806100376000396000f36060604052361561004b5760e060020a60003504633e3fb1a481146100c4578063cfae3217146100d6578063dc0d3dff14610163578063e6d25245146101d7578063ea8a1af0146101ff575b6102b660a06040523360609081523460808190526001805480820180835592939282908280158290116102b8576002028160020283600052602060002091820191016102b891905b8082111561030c57805473ffffffffffffffffffffffffffffffffffffffff19168155600081860155600201610093565b610310600054600160a060020a031681565b600060605260c0604052600560809081527f776f726b7300000000000000000000000000000000000000000000000000000060a052602060c0908152600560e081905281906101009060a09080838184600060046012f1505081517affffffffffffffffffffffffffffffffffffffffffffffffffffff1916909152505060405161012081900392509050f35b61031a60043560018054829081101561000257506000526002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf68101547fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf79190910154600160a060020a03919091169082565b6102b6600435600054600160a060020a03338116911614156103275780600160a060020a0316ff5b6102b660008054600160a060020a0333811691161415610327575b60015481101561032c576001805482908110156100025760009182526002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60190600180549254600160a060020a0316928490811015610002576002027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7015460405190915082818181858883f1505050505060010161021a565b005b505050815481101561000257906000526020600020906002020160005060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505590505050565b5090565b6060908152602090f35b6060918252608052604090f35b610002565b600054600160a060020a0316ff",
    address: "0xef51b22070b21ca6483563007f6db6c5caad2604",
    generated_with: "2.0.9",
    contract_name: "Crowdfund"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Crowdfund error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Crowdfund error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Crowdfund error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Crowdfund error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Crowdfund = Contract;
  }

})();
